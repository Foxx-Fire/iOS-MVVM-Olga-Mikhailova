//
//  Theory.swift
//  iOS-MVVM-Olga Mikhailova
//
//  Created by FoxxFire on 23.09.2025.
//


/*
 Зависимости в MVVM (кто о ком знает)
 Правильная архитектура:
 
 View (ViewController) знает:
 Знает о ViewModel (через протокол)
 Знает о моделях данных для отображения
 НЕ знает детали реализации ViewModel
 
 ViewModel знает:
 Знает о Model (Service, данные)
 Знает как преобразовывать данные для View
 НЕ знает о View (не знает что такое UIKit, UIViewController)
 НЕ знает детали реализации View и НЕ должен создавать UI компоненты
 
 Model (Service) знает:
 Знает только о своих данных
 НЕ знает о ViewModel
 НЕ знает о View
 НЕ знает как данные будут использоваться
 
 ViewController = "Я знаю что есть ViewModel который дает мне данные, и я знаю как их показать на экране"
 
 ViewModel = "Я знаю где взять данные и как их подготовить для показа, но я не знаю и не хочу знать как они будут выглядеть на экране"
 
 Model = "Я просто храню данные, не знаю кто и как их будет использовать"
 
 Аналогия из жизни:
 ViewController = Официант в ресторане
 
 Знает о клиенте (ViewModel)
 
 Знает как подать блюдо (данные)
 
 Не знает как повар готовил
 
 ViewModel = Повар на кухне
 
 Знает о продуктах (Model)
 
 Знает как приготовить блюдо
 
 Не знает как официант подаст
 
 Model = Продукты в холодильнике
 
 Просто лежат и ждут
 
 Не знают кто их будет готовить и подавать
 */
